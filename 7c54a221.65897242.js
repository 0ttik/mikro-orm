(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{210:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(1),o=n(9),i=(n(0),n(290)),r={title:"Smart Nested Populate"},l=[{value:"Using EntityLoader manually",id:"using-entityloader-manually",children:[]}],s={rightToc:l},b="wrapper";function c(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(i.b)(b,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"MikroORM")," is capable of loading large nested structures while maintaining good\nperformance, querying each database table only once. Imagine you have this nested\nstructure:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Book")," has one ",Object(i.b)("inlineCode",{parentName:"li"},"Publisher")," (M:1), one ",Object(i.b)("inlineCode",{parentName:"li"},"Author")," (M:1) and many ",Object(i.b)("inlineCode",{parentName:"li"},"BookTag"),"s (M:N)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Publisher")," has many ",Object(i.b)("inlineCode",{parentName:"li"},"Test"),"s (M:N)")),Object(i.b)("p",null,"When you use nested populate while querying all ",Object(i.b)("inlineCode",{parentName:"p"},"BookTag"),"s, this is what happens in\nthe background:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"const tags = await orm.em.findAll(BookTag, ['books.publisher.tests', 'books.author']);\nconsole.log(tags[0].books[0].publisher.tests[0].name); // prints name of nested test\nconsole.log(tags[0].books[0].author.name); // prints name of nested author\n")),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Load all ",Object(i.b)("inlineCode",{parentName:"li"},"BookTag"),"s"),Object(i.b)("li",{parentName:"ol"},"Load all ",Object(i.b)("inlineCode",{parentName:"li"},"Book"),"s associated with previously loaded ",Object(i.b)("inlineCode",{parentName:"li"},"BookTag"),"s"),Object(i.b)("li",{parentName:"ol"},"Load all ",Object(i.b)("inlineCode",{parentName:"li"},"Publisher"),"s associated with previously loaded ",Object(i.b)("inlineCode",{parentName:"li"},"Book"),"s"),Object(i.b)("li",{parentName:"ol"},"Load all ",Object(i.b)("inlineCode",{parentName:"li"},"Test"),"s associated with previously loaded ",Object(i.b)("inlineCode",{parentName:"li"},"Publisher"),"s"),Object(i.b)("li",{parentName:"ol"},"Load all ",Object(i.b)("inlineCode",{parentName:"li"},"Author"),"s associated with previously loaded ",Object(i.b)("inlineCode",{parentName:"li"},"Book"),"s")),Object(i.b)("p",null,"For SQL drivers with pivot tables this means:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-sql"}),"SELECT `e0`.* FROM `book_tag` AS `e0`;\n\nSELECT `e0`.*, `e1`.`book_id`, `e1`.`book_tag_id`\n  FROM `book` AS `e0` LEFT JOIN `book_to_book_tag` AS `e1` ON `e0`.`id` = `e1`.`book_id`\n  WHERE `e1`.`book_tag_id` IN (?, ?, ?, ?, ?)\n  ORDER BY `e1`.`id` ASC;\n\nSELECT `e0`.* FROM `publisher` AS `e0` WHERE `e0`.`id` IN (?, ?, ?);\n\nSELECT `e0`.*, `e1`.`test_id`, `e1`.`publisher_id`\n  FROM `test` AS `e0` LEFT JOIN `publisher_to_test` AS `e1` ON `e0`.`id` = `e1`.`test_id`\n  WHERE `e1`.`publisher_id` IN (?, ?, ?)\n  ORDER BY `e1`.`id` ASC;\n\nSELECT `e0`.* FROM `author` AS `e0` WHERE `e0`.`id` IN (?);\n")),Object(i.b)("p",null,"For mongo driver its even simpler as no pivot tables are involved:"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'db.getCollection("book-tag").find({}).toArray();\ndb.getCollection("book").find({"tags":{"$in":[...]}}).toArray();\ndb.getCollection("publisher").find({"_id":{"$in":[...]}}).toArray();\ndb.getCollection("test").find({"_id":{"$in":[...]}}).toArray();\ndb.getCollection("author").find({"_id":{"$in":[...]}}).toArray();\n')),Object(i.b)("h2",{id:"using-entityloader-manually"},"Using EntityLoader manually"),Object(i.b)("p",null,"Under the hood, EntityManager uses EntityLoader to populate other entities. You can use it\nmanually if you already have list of entities (e.g. queried via QueryBuilder):"),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"import { EntityLoader } from 'mikro-orm';\n\nconst loader = new EntityLoader(orm.em);\nconst res = await orm.em.createQueryBuilder(Author).select('*').execute();\nconst authors = res.map(data => orm.em.merge(Author, data));\nawait loader.populate(Author, authors, ['books.tags']);\n\n// now your Author entities will have `books` collections populated, \n// as well as they will have their `tags` collections populated.\nconsole.log(authors[0].books[0].tags[0]); // initialized BookTag\n")),Object(i.b)("p",null,Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/v2/index#table-of-contents"}),"\u2190"," Back to table of contents")))}c.isMDXComponent=!0},290:function(e,t,n){"use strict";n.d(t,"a",(function(){return l})),n.d(t,"b",(function(){return d}));var a=n(0),o=n.n(a),i=o.a.createContext({}),r=function(e){var t=o.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):Object.assign({},t,e)),n},l=function(e){var t=r(e.components);return o.a.createElement(i.Provider,{value:t},e.children)};var s="mdxType",b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},c=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,s=function(e,t){var n={};for(var a in e)Object.prototype.hasOwnProperty.call(e,a)&&-1===t.indexOf(a)&&(n[a]=e[a]);return n}(e,["components","mdxType","originalType","parentName"]),c=r(n),d=a,p=c[l+"."+d]||c[d]||b[d]||i;return n?o.a.createElement(p,Object.assign({},{ref:t},s,{components:n})):o.a.createElement(p,Object.assign({},{ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=c;var l={};for(var b in t)hasOwnProperty.call(t,b)&&(l[b]=t[b]);l.originalType=e,l[s]="string"==typeof e?e:a,r[1]=l;for(var d=2;d<i;d++)r[d]=n[d];return o.a.createElement.apply(null,r)}return o.a.createElement.apply(null,n)}c.displayName="MDXCreateElement"}}]);